{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable function-paren-newline */\n\n/* eslint-disable implicit-arrow-linebreak */\n\n/* eslint-disable no-confusing-arrow */\nimport data from '../../db';\nimport websitePageHOC from '../../src/components/Hoc';\nimport ProjectScreen from '../../src/components/ProjectScreen';\nexport default websitePageHOC(ProjectScreen);\nconst {\n  projects\n} = data;\nexport async function getStaticProps({\n  paths\n}) {\n  const projectData = projects.reduce((acc, project) => project.slug === paths.slug ? _objectSpread({}, project) : acc);\n  return {\n    props: {\n      project: projectData,\n      pageWrapperProps: {\n        seoProps: {\n          headTitle: projectData.title\n        }\n      }\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const slugs = projects.reduce((acc, project) => {\n    const model = [{\n      params: {\n        repos: project.slug\n      }\n    }];\n    return [...acc, ...model];\n  }, []);\n  return {\n    paths: slugs,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/apple/Downloads/Projetos/Projeto Jam-Stack/Project-portifolio/pages/project/[repos].js"],"names":["data","websitePageHOC","ProjectScreen","projects","getStaticProps","paths","projectData","reduce","acc","project","slug","props","pageWrapperProps","seoProps","headTitle","title","getStaticPaths","slugs","model","params","repos","fallback"],"mappings":";;;;;;AAAA;;AACA;;AACA;AACA,OAAOA,IAAP,MAAiB,UAAjB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AAEA,eAAeD,cAAc,CAACC,aAAD,CAA7B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeH,IAArB;AAEA,OAAO,eAAeI,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAyC;AAC9C,QAAMC,WAAW,GAAGH,QAAQ,CAACI,MAAT,CAAgB,CAACC,GAAD,EAAMC,OAAN,KAClCA,OAAO,CAACC,IAAR,KAAiBL,KAAK,CAACK,IAAvB,qBAAmCD,OAAnC,IAA+CD,GAD7B,CAApB;AAIA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLF,MAAAA,OAAO,EAAEH,WADJ;AAELM,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,SAAS,EAAER,WAAW,CAACS;AADf;AADM;AAFb;AADF,GAAP;AAUD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGd,QAAQ,CAACI,MAAT,CAAgB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC9C,UAAMS,KAAK,GAAG,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEX,OAAO,CAACC;AAAjB;AAAV,KAAD,CAAd;AACA,WAAO,CAAC,GAAGF,GAAJ,EAAS,GAAGU,KAAZ,CAAP;AACD,GAHa,EAGX,EAHW,CAAd;AAIA,SAAO;AACLb,IAAAA,KAAK,EAAEY,KADF;AAELI,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID","sourcesContent":["/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-confusing-arrow */\nimport data from '../../db';\nimport websitePageHOC from '../../src/components/Hoc';\nimport ProjectScreen from '../../src/components/ProjectScreen';\n\nexport default websitePageHOC(ProjectScreen);\n\nconst { projects } = data;\n\nexport async function getStaticProps({ paths }) {\n  const projectData = projects.reduce((acc, project) =>\n    project.slug === paths.slug ? { ...project } : acc,\n  );\n\n  return {\n    props: {\n      project: projectData,\n      pageWrapperProps: {\n        seoProps: {\n          headTitle: projectData.title,\n        },\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const slugs = projects.reduce((acc, project) => {\n    const model = [{ params: { repos: project.slug } }];\n    return [...acc, ...model];\n  }, []);\n  return {\n    paths: slugs,\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}