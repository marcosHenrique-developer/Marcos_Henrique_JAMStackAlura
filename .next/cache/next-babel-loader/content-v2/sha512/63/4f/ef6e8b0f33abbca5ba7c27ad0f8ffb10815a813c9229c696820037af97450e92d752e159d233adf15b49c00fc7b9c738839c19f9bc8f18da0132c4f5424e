{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Projetos/Projeto Jam-Stack/Project-portifolio/src/foundation/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable react/jsx-filename-extension */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable object-curly-newline */\n\n/* eslint-disable implicit-arrow-linebreak */\n\n/* eslint-disable indent */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { breakpointsMedia } from '../theme/utils/breakpointMedia';\nimport { propToStyle } from '../theme/utils/propStyle';\nimport { Links } from '../components/Links';\nconst paragraph1 = css`\n  font-size: ${({\n  theme\n}) => theme.typographyVariants.paragraph1.fontSize};\n  font-weight: ${({\n  theme\n}) => theme.typographyVariants.paragraph1.fontWeight};\n  line-height: ${({\n  theme\n}) => theme.typographyVariants.paragraph1.lineHeight};\n`;\nconst smallestException = css`\n  font-size: ${({\n  theme\n}) => theme.typographyVariants.smallestException.fontSize};\n  font-weight: ${({\n  theme\n}) => theme.typographyVariants.smallestException.fontWeight};\n  line-height: ${({\n  theme\n}) => theme.typographyVariants.smallestException.lineHeight};\n`;\nexport const TextStyleVariantsMap = {\n  smallestException,\n  paragraph1,\n  title: css`\n    ${({\n    theme\n  }) => css`\n      font-size: ${theme.typographyVariants.titleXS.fontSize};\n      font-weight: ${theme.typographyVariants.titleXS.fontWeight};\n      line-height: ${theme.typographyVariants.titleXS.lineHeight};\n    `}\n    ${breakpointsMedia({\n    md: css`\n        ${({\n      theme\n    }) => css`\n          font-size: ${theme.typographyVariants.title.fontSize};\n          font-weight: ${theme.typographyVariants.title.fontWeight};\n          line-height: ${theme.typographyVariants.title.lineHeight};\n        `}\n      `\n  })}\n  `\n};\nconst TextBase = styled.span`\n  ${props => TextStyleVariantsMap[props.variant]}\n  color: ${({\n  theme,\n  color\n}) => get(theme, `colors.${color}.color`)};\n  ${propToStyle('textAlign')}\n  ${propToStyle('marginBottom')}\n  ${propToStyle('margin')}\n`;\nexport default function Text(_ref) {\n  let {\n    tag,\n    href,\n    variant,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"tag\", \"href\", \"variant\", \"children\"]);\n\n  if (href) {\n    return __jsx(TextBase, _extends({\n      as: Links,\n      variant: variant,\n      href: href // eslint-disable-next-line react/jsx-props-no-spreading\n\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  return __jsx(TextBase, _extends({\n    as: tag,\n    variant: variant // eslint-disable-next-line react/jsx-props-no-spreading\n\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), children);\n}\nText.propTypes = {\n  tag: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n  href: PropTypes.string\n};\nText.defaultProps = {\n  tag: 'span',\n  variant: 'paragraph1',\n  children: null,\n  href: ''\n};","map":{"version":3,"sources":["/Users/apple/Downloads/Projetos/Projeto Jam-Stack/Project-portifolio/src/foundation/index.js"],"names":["React","styled","css","get","PropTypes","breakpointsMedia","propToStyle","Links","paragraph1","theme","typographyVariants","fontSize","fontWeight","lineHeight","smallestException","TextStyleVariantsMap","title","titleXS","md","TextBase","span","props","variant","color","Text","tag","href","children","propTypes","string","node","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable object-curly-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable indent */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { breakpointsMedia } from '../theme/utils/breakpointMedia';\nimport { propToStyle } from '../theme/utils/propStyle';\nimport { Links } from '../components/Links';\n\nconst paragraph1 = css`\n  font-size: ${({ theme }) => theme.typographyVariants.paragraph1.fontSize};\n  font-weight: ${({ theme }) => theme.typographyVariants.paragraph1.fontWeight};\n  line-height: ${({ theme }) => theme.typographyVariants.paragraph1.lineHeight};\n`;\n\nconst smallestException = css`\n  font-size: ${({ theme }) =>\n    theme.typographyVariants.smallestException.fontSize};\n  font-weight: ${({ theme }) =>\n    theme.typographyVariants.smallestException.fontWeight};\n  line-height: ${({ theme }) =>\n    theme.typographyVariants.smallestException.lineHeight};\n`;\n\nexport const TextStyleVariantsMap = {\n  smallestException,\n  paragraph1,\n  title: css`\n    ${({ theme }) => css`\n      font-size: ${theme.typographyVariants.titleXS.fontSize};\n      font-weight: ${theme.typographyVariants.titleXS.fontWeight};\n      line-height: ${theme.typographyVariants.titleXS.lineHeight};\n    `}\n    ${breakpointsMedia({\n      md: css`\n        ${({ theme }) => css`\n          font-size: ${theme.typographyVariants.title.fontSize};\n          font-weight: ${theme.typographyVariants.title.fontWeight};\n          line-height: ${theme.typographyVariants.title.lineHeight};\n        `}\n      `,\n    })}\n  `,\n};\n\nconst TextBase = styled.span`\n  ${(props) => TextStyleVariantsMap[props.variant]}\n  color: ${({ theme, color }) => get(theme, `colors.${color}.color`)};\n  ${propToStyle('textAlign')}\n  ${propToStyle('marginBottom')}\n  ${propToStyle('margin')}\n`;\n\nexport default function Text({ tag, href, variant, children, ...props }) {\n  if (href) {\n    return (\n      <TextBase\n        as={Links}\n        variant={variant}\n        href={href}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n      >\n        {children}\n      </TextBase>\n    );\n  }\n\n  return (\n    <TextBase\n      as={tag}\n      variant={variant}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n    >\n      {children}\n    </TextBase>\n  );\n}\nText.propTypes = {\n  tag: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n  href: PropTypes.string,\n};\n\nText.defaultProps = {\n  tag: 'span',\n  variant: 'paragraph1',\n  children: null,\n  href: '',\n};\n"]},"metadata":{},"sourceType":"module"}