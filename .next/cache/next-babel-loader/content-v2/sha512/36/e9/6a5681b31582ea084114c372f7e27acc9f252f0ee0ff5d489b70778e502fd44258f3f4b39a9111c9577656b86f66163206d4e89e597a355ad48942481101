{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Projetos/Projeto Jam-Stack/Project-portifolio/src/foundation/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable react/default-props-match-prop-types */\n\n/* eslint-disable react/require-default-props */\n\n/* eslint-disable react/jsx-filename-extension */\n\n/* eslint-disable indent */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { breakpointsMedia } from '../theme/utils/breakpointMedia';\nimport { propToStyle } from '../theme/utils/propStyle';\nimport { Links } from '../components/Links';\nconst paragraph1 = css`\n  ${({\n  theme\n}) => css`\n    font-size: ${theme.typographyVariants.paragraph1.fontSize};\n    font-weight: ${theme.typographyVariants.paragraph1.fontWeight};\n    line-height: ${theme.typographyVariants.paragraph1.lineHeight};\n  `}\n`;\nconst smallestException = css`\n  ${({\n  theme\n}) => css`\n    font-size: ${theme.typographyVariants.smallestException.fontSize};\n    font-weight: ${theme.typographyVariants.smallestException.fontWeight};\n    line-height: ${theme.typographyVariants.smallestException.lineHeight};\n  `}\n`;\nexport const TextStyleVariants = {\n  smallestException,\n  paragraph1,\n  title: css`\n    ${({\n    theme\n  }) => css`\n      font-size: ${theme.typographyVariants.titleXS.fontSize};\n      font-weight: ${theme.typographyVariants.titleXS.fontWeight};\n      line-height: ${theme.typographyVariants.titleXS.lineHeight};\n    `}\n    ${breakpointsMedia({\n    md: css`\n        ${({\n      theme\n    }) => css`\n          font-size: ${theme.typographyVariants.title.fontSize};\n          font-weight: ${theme.typographyVariants.title.fontWeight};\n          line-height: ${theme.typographyVariants.title.lineHeight};\n        `}\n      `\n  })}\n  `\n};\nconst TextBase = styled.span`\n  ${({\n  variant\n}) => TextStyleVariants[variant]}\n  color: ${({\n  theme,\n  color\n}) => get(theme, `colors.${color}.color`)};\n  ${propToStyle('textAlign')};\n`; // eslint-disable-next-line object-curly-newline\n\nexport default function Text(_ref) {\n  let {\n    href,\n    variant,\n    children,\n    tag\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"href\", \"variant\", \"children\", \"tag\"]);\n\n  if (href) {\n    return __jsx(TextBase, _extends({\n      as: Links,\n      variant: variant,\n      href: href // eslint-disable-next-line react/jsx-props-no-spreading\n\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  return (// eslint-disable-next-line react/jsx-props-no-spreading\n    __jsx(TextBase, _extends({\n      as: tag,\n      variant: variant\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }), children)\n  );\n}\nText.defaultProps = {\n  tag: 'span',\n  variant: 'paragraph1',\n  children: null,\n  href: ''\n};\nText.propTypes = {\n  tag: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n  href: PropTypes.string\n};","map":{"version":3,"sources":["/Users/apple/Downloads/Projetos/Projeto Jam-Stack/Project-portifolio/src/foundation/index.js"],"names":["React","styled","css","get","PropTypes","breakpointsMedia","propToStyle","Links","paragraph1","theme","typographyVariants","fontSize","fontWeight","lineHeight","smallestException","TextStyleVariants","title","titleXS","md","TextBase","span","variant","color","Text","href","children","tag","props","defaultProps","propTypes","string","node"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,MAAMC,UAAU,GAAGN,GAAI;AACvB,IAAI,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAeP,GAAI;AACvB,iBAAiBO,KAAK,CAACC,kBAAN,CAAyBF,UAAzB,CAAoCG,QAAS;AAC9D,mBAAmBF,KAAK,CAACC,kBAAN,CAAyBF,UAAzB,CAAoCI,UAAW;AAClE,mBAAmBH,KAAK,CAACC,kBAAN,CAAyBF,UAAzB,CAAoCK,UAAW;AAClE,GAAI;AACJ,CANA;AAOA,MAAMC,iBAAiB,GAAGZ,GAAI;AAC9B,IAAI,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAeP,GAAI;AACvB,iBAAiBO,KAAK,CAACC,kBAAN,CAAyBI,iBAAzB,CAA2CH,QAAS;AACrE,mBAAmBF,KAAK,CAACC,kBAAN,CAAyBI,iBAAzB,CAA2CF,UAAW;AACzE,mBAAmBH,KAAK,CAACC,kBAAN,CAAyBI,iBAAzB,CAA2CD,UAAW;AACzE,GAAI;AACJ,CANA;AAOA,OAAO,MAAME,iBAAiB,GAAG;AAC/BD,EAAAA,iBAD+B;AAE/BN,EAAAA,UAF+B;AAG/BQ,EAAAA,KAAK,EAAEd,GAAI;AACb,MAAM,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAAeP,GAAI;AACzB,mBAAmBO,KAAK,CAACC,kBAAN,CAAyBO,OAAzB,CAAiCN,QAAS;AAC7D,qBAAqBF,KAAK,CAACC,kBAAN,CAAyBO,OAAzB,CAAiCL,UAAW;AACjE,qBAAqBH,KAAK,CAACC,kBAAN,CAAyBO,OAAzB,CAAiCJ,UAAW;AACjE,KAAM;AACN,MAAMR,gBAAgB,CAAC;AACjBa,IAAAA,EAAE,EAAEhB,GAAI;AACd,UAAU,CAAC;AAAEO,MAAAA;AAAF,KAAD,KAAeP,GAAI;AAC7B,uBAAuBO,KAAK,CAACC,kBAAN,CAAyBM,KAAzB,CAA+BL,QAAS;AAC/D,yBAAyBF,KAAK,CAACC,kBAAN,CAAyBM,KAAzB,CAA+BJ,UAAW;AACnE,yBAAyBH,KAAK,CAACC,kBAAN,CAAyBM,KAAzB,CAA+BH,UAAW;AACnE,SAAU;AACV;AAPuB,GAAD,CAQf;AACP;AAlBiC,CAA1B;AAqBP,MAAMM,QAAQ,GAAGlB,MAAM,CAACmB,IAAK;AAC7B,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiBN,iBAAiB,CAACM,OAAD,CAAU;AAChD,WAAW,CAAC;AAAEZ,EAAAA,KAAF;AAASa,EAAAA;AAAT,CAAD,KAAsBnB,GAAG,CAACM,KAAD,EAAS,UAASa,KAAM,QAAxB,CAAiC;AACrE,IAAIhB,WAAW,CAAC,WAAD,CAAc;AAC7B,CAJA,C,CAKA;;AACA,eAAe,SAASiB,IAAT,OAA0D;AAAA,MAA5C;AAAEC,IAAAA,IAAF;AAAQH,IAAAA,OAAR;AAAiBI,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,GAA4C;AAAA,MAATC,KAAS;;AACvE,MAAIH,IAAJ,EAAU;AACR,WACE,MAAC,QAAD;AACE,MAAA,EAAE,EAAEjB,KADN;AAEE,MAAA,OAAO,EAAEc,OAFX;AAGE,MAAA,IAAI,EAAEG,IAHR,CAIE;;AAJF,OAKMG,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOGF,QAPH,CADF;AAWD;;AACD,SACE;AACA,UAAC,QAAD;AAAU,MAAA,EAAE,EAAEC,GAAd;AAAmB,MAAA,OAAO,EAAEL;AAA5B,OAAyCM,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,QADH;AAFF;AAMD;AAEDF,IAAI,CAACK,YAAL,GAAoB;AAClBF,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAAO,EAAE,YAFS;AAGlBI,EAAAA,QAAQ,EAAE,IAHQ;AAIlBD,EAAAA,IAAI,EAAE;AAJY,CAApB;AAOAD,IAAI,CAACM,SAAL,GAAiB;AACfH,EAAAA,GAAG,EAAEtB,SAAS,CAAC0B,MADA;AAEfT,EAAAA,OAAO,EAAEjB,SAAS,CAAC0B,MAFJ;AAGfL,EAAAA,QAAQ,EAAErB,SAAS,CAAC2B,IAHL;AAIfP,EAAAA,IAAI,EAAEpB,SAAS,CAAC0B;AAJD,CAAjB","sourcesContent":["/* eslint-disable react/default-props-match-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable indent */\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { breakpointsMedia } from '../theme/utils/breakpointMedia';\nimport { propToStyle } from '../theme/utils/propStyle';\nimport { Links } from '../components/Links';\n\nconst paragraph1 = css`\n  ${({ theme }) => css`\n    font-size: ${theme.typographyVariants.paragraph1.fontSize};\n    font-weight: ${theme.typographyVariants.paragraph1.fontWeight};\n    line-height: ${theme.typographyVariants.paragraph1.lineHeight};\n  `}\n`;\nconst smallestException = css`\n  ${({ theme }) => css`\n    font-size: ${theme.typographyVariants.smallestException.fontSize};\n    font-weight: ${theme.typographyVariants.smallestException.fontWeight};\n    line-height: ${theme.typographyVariants.smallestException.lineHeight};\n  `}\n`;\nexport const TextStyleVariants = {\n  smallestException,\n  paragraph1,\n  title: css`\n    ${({ theme }) => css`\n      font-size: ${theme.typographyVariants.titleXS.fontSize};\n      font-weight: ${theme.typographyVariants.titleXS.fontWeight};\n      line-height: ${theme.typographyVariants.titleXS.lineHeight};\n    `}\n    ${breakpointsMedia({\n      md: css`\n        ${({ theme }) => css`\n          font-size: ${theme.typographyVariants.title.fontSize};\n          font-weight: ${theme.typographyVariants.title.fontWeight};\n          line-height: ${theme.typographyVariants.title.lineHeight};\n        `}\n      `,\n    })}\n  `,\n};\n\nconst TextBase = styled.span`\n  ${({ variant }) => TextStyleVariants[variant]}\n  color: ${({ theme, color }) => get(theme, `colors.${color}.color`)};\n  ${propToStyle('textAlign')};\n`;\n// eslint-disable-next-line object-curly-newline\nexport default function Text({ href, variant, children, tag, ...props }) {\n  if (href) {\n    return (\n      <TextBase\n        as={Links}\n        variant={variant}\n        href={href}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n      >\n        {children}\n      </TextBase>\n    );\n  }\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <TextBase as={tag} variant={variant} {...props}>\n      {children}\n    </TextBase>\n  );\n}\n\nText.defaultProps = {\n  tag: 'span',\n  variant: 'paragraph1',\n  children: null,\n  href: '',\n};\n\nText.propTypes = {\n  tag: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n  href: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}