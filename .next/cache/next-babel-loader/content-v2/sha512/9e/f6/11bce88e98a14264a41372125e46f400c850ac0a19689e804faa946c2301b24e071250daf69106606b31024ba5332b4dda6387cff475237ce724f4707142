{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/Projetos/Projeto Jam-Stack/Project-portifolio/pages/sobre/[repos].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PagesGit from '../../src/components/GitPages';\nimport websitePageHOC from '../../src/components/Hoc';\n\nfunction GitPages(_ref) {\n  var post = _ref.post;\n  return (// eslint-disable-next-line react/jsx-filename-extension\n    __jsx(PagesGit, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }\n    })\n  );\n}\n\n_c = GitPages;\nGitPages.propTypes = PagesGit.propTypes;\nexport var __N_SSG = true;\nexport default _c2 = websitePageHOC(GitPages);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GitPages\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/apple/Downloads/Projetos/Projeto Jam-Stack/Project-portifolio/pages/sobre/[repos].js"],"names":["React","PagesGit","websitePageHOC","GitPages","post","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;AAEA,SAASC,QAAT,OAA4B;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC1B,SACE;AACA,UAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAID;;KALQD,Q;AAOTA,QAAQ,CAACE,SAAT,GAAqBJ,QAAQ,CAACI,SAA9B;;AAEA,qBAAeH,cAAc,CAACC,QAAD,CAA7B","sourcesContent":["import React from 'react';\nimport PagesGit from '../../src/components/GitPages';\nimport websitePageHOC from '../../src/components/Hoc';\n\nfunction GitPages({ post }) {\n  return (\n    // eslint-disable-next-line react/jsx-filename-extension\n    <PagesGit post={post} />\n  );\n}\n\nGitPages.propTypes = PagesGit.propTypes;\n\nexport default websitePageHOC(GitPages);\n\nexport async function getStaticProps({ params }) {\n  const faqCategories = await fetch(\n    'https://instalura-api.vercel.app/api/content/faq',\n  ).then(async (respostaDoServer) => {\n    const resposta = await respostaDoServer.json();\n    return resposta.data;\n  });\n\n  const dadosDaPagina = faqCategories.reduce((valorAcumulado, faqCategory) => {\n    const foundQuestion = faqCategory.questions.find((question) => {\n      if (question.slug === params.slug) {\n        return true;\n      }\n      return false;\n    });\n\n    if (foundQuestion) {\n      return {\n        ...valorAcumulado,\n        category: faqCategory,\n        question: foundQuestion,\n      };\n    }\n\n    return valorAcumulado;\n  }, {});\n\n  return {\n    props: {\n      category: dadosDaPagina.category,\n      question: dadosDaPagina.question,\n      pageWrapperProps: {\n        seoProps: {\n          headTitle: dadosDaPagina.question.title,\n        },\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const faqCategories = await fetch(\n    'https://instalura-api.vercel.app/api/content/faq',\n  ).then(async (respostaDoServer) => {\n    const resposta = await respostaDoServer.json();\n    console.log(faqCategories);\n    return resposta;\n  });\n\n  const paths = faqCategories.reduce((valorAcumulado, faqCategory) => {\n    const questionsPaths = faqCategory.questions.map((question) => {\n      const questionSlug = question;\n      return { params: { slug: questionSlug } };\n    });\n\n    return [...valorAcumulado, ...questionsPaths];\n  }, []);\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}